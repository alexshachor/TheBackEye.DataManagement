<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StudentConfiguration.Api</name>
    </assembly>
    <members>
        <member name="T:StudentConfiguration.Api.Controllers.LessonController">
            <summary>
            StudentController is responsible for all the student's CRUD operations using API calls 
            </summary>
        </member>
        <member name="M:StudentConfiguration.Api.Controllers.LessonController.Get(System.String)">
            <summary>
            Get LessonDto object by class code string
            </summary>
            <param name="classCode">The class code string</param>
            <response code="200">LessonDto object contains all of the lesson details</response>
            <response code="400">BadRequest - invalid values (lower than 1)</response>
            <response code="404">NotFound - cannot find the student in DB</response>
            <response code="500">InternalServerError - for any error occurred in server</response>
        </member>
        <member name="T:StudentConfiguration.Api.Controllers.LogController">
            <summary>
            LogController is responsible for all the log's CRUD operations using API calls 
            </summary>
        </member>
        <member name="M:StudentConfiguration.Api.Controllers.LogController.Get(System.Int32)">
            <summary>
            Get LogDto object by the log id number
            </summary>
            <param name="logId">The identity number of the log</param>
            <response code="200">LogDto object contains all of the log's details</response>
            <response code="400">BadRequest - invalid values (lower than 1)</response>
            <response code="404">NotFound - cannot find the student in DB</response>
            <response code="500">InternalServerError - for any error occurred in server</response>
        </member>
        <member name="M:StudentConfiguration.Api.Controllers.LogController.Post(Dtos.LogDto)">
            <summary>
            Add a new log to DB
            </summary>
            <param name="logDto">LogDto object contains all of the log's details which will be added to DB</param>
            <response code="200">LogDto object contains all of the log's details from DB</response>
            <response code="400">BadRequest - invalid values (Student or Person is null)</response>
            <response code="500">InternalServerError - for any error occurred in server</response>
        </member>
        <member name="M:StudentConfiguration.Api.Controllers.LogController.Delete(System.Int32)">
            <summary>
            Delete LogDto object by the log id number
            </summary>
            <param name="logId">The identity number of the log</param>
            <response code="200">bool true</response>
            <response code="400">BadRequest - invalid values (lower than 1)</response>
            <response code="404">NotFound - cannot find the student in DB</response>
            <response code="500">InternalServerError - for any error occurred in server</response>
        </member>
        <member name="T:StudentConfiguration.Api.Controllers.StudentController">
            <summary>
            StudentController is responsible for all the student's CRUD operations using API calls 
            </summary>
        </member>
        <member name="M:StudentConfiguration.Api.Controllers.StudentController.Get(System.String)">
            <summary>
            Get StudentDto object by the student id number
            </summary>
            <param name="birthId">The identity number (from birth) of the student</param>
            <response code="200">StudentDto object contains all of the student's personal details</response>
            <response code="400">BadRequest - invalid values (lower than 1)</response>
            <response code="404">NotFound - cannot find the student in DB</response>
            <response code="500">InternalServerError - for any error occurred in server</response>
        </member>
        <member name="M:StudentConfiguration.Api.Controllers.StudentController.Post(Dtos.StudentDto)">
            <summary>
            Add a new student to DB
            </summary>
            <param name="studentDto">StudentDto object contains all of the student's personal details which will be added to DB</param>
            <response code="200">StudentDto object contains all of the student's personal details from DB</response>
            <response code="400">BadRequest - invalid values (Student or Person is null)</response>
            <response code="500">InternalServerError - for any error occurred in server</response>
        </member>
    </members>
</doc>
